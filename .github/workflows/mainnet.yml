name: EKS-XANA-VESTING-PROD-CICD
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "mainnet" ]
env:
  ECR_REPOSITORY : xana-vesting-prod-eks
  CLUSTER_NAME : eks-prod-cluster
  CLUSTER_REGION: ap-southeast-1
  EKS_APP_NAME : vesting-live
  HELM_FOLDER_NAME : vesting-live
  NAMESPACE: xana-prod-apps
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    #- name: Checkout submodules
    #  run: git submodule update --init --recursive
    - name: Configure AWS Creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: 'List Files'
      run: ls
    # - name: 'Export Variables to ENV'
    #   run: |
    #     source load_env.sh
    #     envsubst < load_env_template > .env
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      id: Docker-Build-tag-and-push-image-to-AmazonECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} .
        docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
    - name: Update kubeconfig file
      id: Update-KubeConfig
      run: aws eks update-kubeconfig --region $CLUSTER_REGION --name $CLUSTER_NAME
    - name: check kubectl
      id: Check-Pods-Before-Upgrade
      run: kubectl get pods -n $NAMESPACE
    - name: helm upgrade
      id: Helm-Upgrade
      run: helm upgrade -i $EKS_APP_NAME helm-chart/$HELM_FOLDER_NAME/ -n $NAMESPACE --values helm-chart/$HELM_FOLDER_NAME/values.yaml
    - name: check kubectl
      id: Check-Pods-After-Upgrade
      run: kubectl get pods -n $NAMESPACE
    - name: GetIngUrl
      id: GetIngUrl
      run: echo "URL=`kubectl get ing $EKS_APP_NAME -n $NAMESPACE | awk '{print $3 }' | awk '{if(NR>1)print}'`" >> $GITHUB_OUTPUT
    - uses: act10ns/slack@v1
      with:
        steps: ${{ toJson(steps) }}
        message: URL - ${{ steps.GetIngUrl.outputs.URL }}
        status: ${{ job.status }}
        config: .github/slack.yml
      env:
        SLACK_CHANNEL: '#github-action'
        SLACK_COLOR: ${{ job.status }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
      if: always() # Pick up events even if the job fails or is canceled.